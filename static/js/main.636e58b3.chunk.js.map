{"version":3,"sources":["AppBar/AppBar.tsx","StatusCard/StatusCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","Box","sx","flexGrow","position","Toolbar","Typography","variant","component","wait","delay","Promise","resolve","setTimeout","Loader","style","display","justifyContent","alignItems","height","CircularProgress","color","size","StatusCard","React","isLoading","setIsLoading","deviceState","setDeviceState","handleClick","a","minWidth","Card","onClick","CardContent","fontSize","gutterBottom","mb","App","className","Container","maxWidth","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"0QASe,SAASA,IACtB,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACE,cAAC,IAAD,CAAWC,SAAS,SAApB,SACE,cAACC,EAAA,EAAD,UAUE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMN,GAAI,CAAEC,SAAU,GAAzD,8C,6DCqBJM,EAAO,SAACC,GAAD,OAAmB,IAAIC,SAAQ,SAACC,GACzCC,YAAW,WAAQD,EAAQ,UAAWF,OAGpCI,EAAS,WACX,OAAO,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,QAAvF,SACH,cAACC,EAAA,EAAD,CAAkBC,MAAM,YAAYC,KAAM,SAInC,SAASC,IAAc,IAAD,EACCC,YAAe,GADhB,mBAC1BC,EAD0B,KACfC,EADe,OAEKF,YAAe,GAFpB,mBAE1BG,EAF0B,KAEbC,EAFa,KAG3BC,EAAW,uCAAG,sBAAAC,EAAA,6DAChBJ,GAAa,GACbE,GAAe,GAFC,SAGVnB,EAAK,KAHK,OAIhBiB,GAAa,GAJG,2CAAH,qDAMjB,OACI,cAACzB,EAAA,EAAD,CAAKC,GAAI,CAAE6B,SAAU,KAArB,SACI,cAACC,EAAA,EAAD,CAAMzB,QAAQ,WAAW0B,QAASJ,EAAad,MAAO,CAAEI,OAAQ,sBAAhE,SACI,cAACe,EAAA,EAAD,CAAanB,MAAO,CAAEI,OAAQ,QAA9B,SACKM,EAAY,cAAC,EAAD,IACT,qCACI,cAACnB,EAAA,EAAD,CAAYJ,GAAI,CAAEiC,SAAU,IAAMd,MAAM,iBAAiBe,cAAY,EAArE,0BAGA,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,2BAGA,cAACF,EAAA,EAAD,CAAYJ,GAAI,CAAEmC,GAAI,KAAOhB,MAAM,iBAAnC,2CAGA,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQ6B,cAAY,EAAxC,wCAEI,uBAFJ,cAKA,cAAC9B,EAAA,EAAD,UACI,iCAASqB,EAAc,YAAc,4BClEtDW,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,UAAU,EAAO1B,MAAO,CAAE2B,WAAY,QAAjD,SACE,cAACnB,EAAD,UCEOoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCFRQ,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,UAIVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAeP,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.636e58b3.chunk.js","sourcesContent":["import * as React from 'react';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import IconButton from '@mui/material/IconButton';\n// import MenuIcon from '@mui/icons-material/Menu';\n\nexport default function AppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <MuiAppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n           ðŸ’“ IoT Heartbeat\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </MuiAppBar>\n    </Box>\n  );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { flexbox } from '@mui/system';\n\n// const bull = (\n//     <Box\n//         component=\"span\"\n//         sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n//     >\n//         â€¢\n//     </Box>\n// );\n\n// const card = (\n//     <React.Fragment>\n//         <CardContent>\n//             <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n//                 NUC 11443323\n//             </Typography>\n//             <Typography variant=\"h5\" component=\"div\">\n//                 IP 10.0.100.1\n//             </Typography>\n//             <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n//                 Location: Westfields Oirschot\n//             </Typography>\n//             <Typography variant=\"body2\">\n//                 serialnr 2454ae245afh141145\n//                 <br />\n//                 type NUC\n//             </Typography>\n//             <CircularProgress color=\"secondary\" />\n//         </CardContent>\n//         {/* <CardActions>\n//             <Button size=\"small\">Learn More</Button>\n//         </CardActions> */}\n//     </React.Fragment>\n// );\n\nconst wait = (delay: number) => new Promise((resolve) => {\n    setTimeout(() => { resolve(\"done\") }, delay);\n})\n\nconst Loader = () => {\n    return <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\" }}>\n        <CircularProgress color=\"secondary\" size={140} />\n    </div>\n}\n\nexport default function StatusCard() {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [deviceState, setDeviceState] = React.useState(false);\n    const handleClick = async () => {\n        setIsLoading(true);\n        setDeviceState(true);\n        await wait(1000);\n        setIsLoading(false);\n    };\n    return (\n        <Box sx={{ minWidth: 275 }}>\n            <Card variant=\"outlined\" onClick={handleClick} style={{ height: \"calc(100vh - 90px)\" }}>\n                <CardContent style={{ height: \"100%\" }}>\n                    {isLoading ? <Loader /> :\n                        <>\n                            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                                NUC 11443323\n                            </Typography>\n                            <Typography variant=\"h5\" component=\"div\">\n                                IP 10.0.100.1\n                            </Typography>\n                            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                                Location: Westfields Oirschot\n                            </Typography>\n                            <Typography variant=\"body2\" gutterBottom>\n                                serialnr 2454ae245afh141145\n                                <br />\n                                type NUC\n                            </Typography>\n                            <Typography>\n                                <strong>{deviceState ? \"CONNECTED\" : \"DISCONNECTED\"}</strong>\n                            </Typography>\n                        </>}\n                </CardContent>\n            </Card>\n        </Box>\n    );\n}","import { Container } from '@mui/material';\nimport React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport AppBar from './AppBar/AppBar';\nimport StatusCard from './StatusCard/StatusCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Container maxWidth={false} style={{ paddingTop: \"1rem\" }}>\n        <StatusCard />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Box, createTheme, ThemeProvider } from '@mui/material';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}